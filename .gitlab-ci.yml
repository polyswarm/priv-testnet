image: $REPO_URL/stage

services:
  - docker:dind

stages:
  - build
  - test
  - e2e
  - release
  - deployment

variables:
  DOCKER_HOST: tcp://localhost:2375/
  BASE_IMAGE_NAME: priv-testnet

###############################################################
# Build Stage (jobs inside a stage run in parallel)
###############################################################

build:
  stage: build
  tags:
    - kube
  script:
     # try to download a cache image
     - docker pull $REPO_URL/$BASE_IMAGE_NAME:latest || true
     # try to download the multi-stage dependant image and retag it as latest
     - docker pull $MODELS_IMAGE:$CI_COMMIT_REF_SLUG
       && docker tag $MODELS_IMAGE:$CI_COMMIT_REF_SLUG $MODELS_IMAGE:latest
       || docker pull $MODELS_IMAGE:latest
     # explicitly pull the latest version of the dependant image
     - docker pull ethereum/client-go:v1.8.18
     - docker build
       -f docker/Dockerfile
       -t $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA
       -t $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_REF_SLUG
       --cache-from=$REPO_URL/$BASE_IMAGE_NAME:latest
       .
     - docker push $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA
     - docker push $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_REF_SLUG

###############################################################
# Test Stage
###############################################################

###############################################################
# Test e2e
###############################################################

###############################################################
# Release Stage
###############################################################

release-latest:
  stage: release
  tags:
    - kube
  only:
    - master
  script:
    # Gets the current image that was built in the CI for this commit
    - docker pull $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA
    # Creates new tags for this image, one that should go to AWS and another to DockerHub with the tag "latest"
    - docker tag $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA $REPO_URL/$BASE_IMAGE_NAME:latest
    - docker tag $REPO_URL/$BASE_IMAGE_NAME:$CI_COMMIT_SHA polyswarm/$BASE_IMAGE_NAME:latest
    # Pushes to AWS
    - docker push $REPO_URL/$BASE_IMAGE_NAME:latest
    # Pushes to DockerHub
    - docker logout
    - docker login -u $CI_CUSTOM_DOCKER_HUB_USERNAME -p $CI_CUSTOM_DOCKER_HUB_PASSWORD
    - docker push polyswarm/$BASE_IMAGE_NAME:latest

###############################################################
# Deployment Stage
###############################################################
